//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QUANLY_KHOHANGEntities : DbContext
    {
        public QUANLY_KHOHANGEntities()
            : base("name=QUANLY_KHOHANGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tb_CHUNGTU> tb_CHUNGTU { get; set; }
        public virtual DbSet<tb_CHUNGTU_CT> tb_CHUNGTU_CT { get; set; }
        public virtual DbSet<tb_CONGTY> tb_CONGTY { get; set; }
        public virtual DbSet<tb_DONVI> tb_DONVI { get; set; }
        public virtual DbSet<tb_DVT> tb_DVT { get; set; }
        public virtual DbSet<tb_HANGHOA> tb_HANGHOA { get; set; }
        public virtual DbSet<tb_KHACHHANG> tb_KHACHHANG { get; set; }
        public virtual DbSet<tb_NHACUNGCAP> tb_NHACUNGCAP { get; set; }
        public virtual DbSet<tb_NHOMHH> tb_NHOMHH { get; set; }
        public virtual DbSet<tb_SYS_FUNC> tb_SYS_FUNC { get; set; }
        public virtual DbSet<tb_SYS_GROUP> tb_SYS_GROUP { get; set; }
        public virtual DbSet<tb_SYS_REPORT> tb_SYS_REPORT { get; set; }
        public virtual DbSet<tb_SYS_RIGHT> tb_SYS_RIGHT { get; set; }
        public virtual DbSet<tb_SYS_RIGHT_REP> tb_SYS_RIGHT_REP { get; set; }
        public virtual DbSet<tb_SYS_SEQUENCE> tb_SYS_SEQUENCE { get; set; }
        public virtual DbSet<tb_SYS_USER> tb_SYS_USER { get; set; }
        public virtual DbSet<tb_TONKHO> tb_TONKHO { get; set; }
        public virtual DbSet<tb_XUATXU> tb_XUATXU { get; set; }
        public virtual DbSet<R_CHUNGTU> R_CHUNGTU { get; set; }
        public virtual DbSet<V_FUNC_SYS_RIGHT> V_FUNC_SYS_RIGHT { get; set; }
        public virtual DbSet<V_REP_SYS_RIGHT_REP> V_REP_SYS_RIGHT_REP { get; set; }
        public virtual DbSet<V_USER_IN_GROUP> V_USER_IN_GROUP { get; set; }
        public virtual DbSet<V_USER_NOTIN_GROUP> V_USER_NOTIN_GROUP { get; set; }
    
        public virtual int spNGAY_TINHTON(ObjectParameter nGAYC, ObjectParameter nGAYD, ObjectParameter nAM, ObjectParameter kY)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNGAY_TINHTON", nGAYC, nGAYD, nAM, kY);
        }
    
        public virtual int TINH_TONKHO_DONVI(Nullable<System.DateTime> nGAYC, string mADVI)
        {
            var nGAYCParameter = nGAYC.HasValue ?
                new ObjectParameter("NGAYC", nGAYC) :
                new ObjectParameter("NGAYC", typeof(System.DateTime));
    
            var mADVIParameter = mADVI != null ?
                new ObjectParameter("MADVI", mADVI) :
                new ObjectParameter("MADVI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TINH_TONKHO_DONVI", nGAYCParameter, mADVIParameter);
        }
    
        public virtual int TINH_TONKHO_CONGTY(Nullable<System.DateTime> nGAYC, string mACTY)
        {
            var nGAYCParameter = nGAYC.HasValue ?
                new ObjectParameter("NGAYC", nGAYC) :
                new ObjectParameter("NGAYC", typeof(System.DateTime));
    
            var mACTYParameter = mACTY != null ?
                new ObjectParameter("MACTY", mACTY) :
                new ObjectParameter("MACTY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TINH_TONKHO_CONGTY", nGAYCParameter, mACTYParameter);
        }
    
        public virtual int REP_TONKHO_CONGTY(Nullable<System.DateTime> nGAYD, Nullable<System.DateTime> nGAYC, string mACTY)
        {
            var nGAYDParameter = nGAYD.HasValue ?
                new ObjectParameter("NGAYD", nGAYD) :
                new ObjectParameter("NGAYD", typeof(System.DateTime));
    
            var nGAYCParameter = nGAYC.HasValue ?
                new ObjectParameter("NGAYC", nGAYC) :
                new ObjectParameter("NGAYC", typeof(System.DateTime));
    
            var mACTYParameter = mACTY != null ?
                new ObjectParameter("MACTY", mACTY) :
                new ObjectParameter("MACTY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REP_TONKHO_CONGTY", nGAYDParameter, nGAYCParameter, mACTYParameter);
        }
    
        public virtual int REP_TONKHO_DONVI(Nullable<System.DateTime> nGAYD, Nullable<System.DateTime> nGAYC, string mADVI)
        {
            var nGAYDParameter = nGAYD.HasValue ?
                new ObjectParameter("NGAYD", nGAYD) :
                new ObjectParameter("NGAYD", typeof(System.DateTime));
    
            var nGAYCParameter = nGAYC.HasValue ?
                new ObjectParameter("NGAYC", nGAYC) :
                new ObjectParameter("NGAYC", typeof(System.DateTime));
    
            var mADVIParameter = mADVI != null ?
                new ObjectParameter("MADVI", mADVI) :
                new ObjectParameter("MADVI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REP_TONKHO_DONVI", nGAYDParameter, nGAYCParameter, mADVIParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
